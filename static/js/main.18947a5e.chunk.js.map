{"version":3,"sources":["components/SearchSuggestions.js","components/SearchBar.js","components/Debouncer.js","components/City.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["SearchSuggestions","suggestions","search_item","list","map","suggestion","index","name","LocalizedName","substring","length","className","to","Key","Country","ID","style","fontWeight","color","AdministrativeArea","SearchBar","useState","searchResult","setsearchResult","query","setQuery","debouncedSearchTerm","value","delay","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useDebounce","axios","get","apikey","then","response","data","city","localStorage","getItem","country","type","placeholder","onChange","e","input","target","City","match","params","Name","Temperature","Metric","Value","RealFeelTemperature","Visibility","Pressure","Wind","Speed","RelativeHumidity","IndoorRelativeHumidity","WeatherText","WeatherIcon","cityDetails","setcityDetails","isLoading","setIsLoading","isError","setIsError","setItem","catch","error","src","toString","alt","Footer","href","rel","App","basename","process","exact","path","render","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.18947a5e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const SearchSuggestions = ({ suggestions, search_item = \"\"}) => {\r\n    \r\n    let list = suggestions.map((suggestion, index) => {\r\n      let name = suggestion.LocalizedName.substring(search_item.length,);\r\n      \r\n      return (\r\n        <li className=\"suggestions\" key={index}>\r\n          <Link\r\n            to={`/city/${suggestion.Key}/${suggestion.LocalizedName}/${suggestion.Country.ID}`}\r\n          >\r\n            <span style={{ fontWeight: \"bold\", color: \"red\" }}>\r\n              {search_item}\r\n            </span>\r\n            {name}, {suggestion.AdministrativeArea.LocalizedName},{\" \"}\r\n            {suggestion.Country.LocalizedName}\r\n          </Link>\r\n        </li>\r\n      );});\r\n    return(\r\n        <div>\r\n        <ul className=\"suggestions\">\r\n            {list}\r\n        </ul>\r\n        </div>\r\n    );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { SearchSuggestions } from \"./SearchSuggestions.js\";\r\nimport { useDebounce } from \"./Debouncer.js\";\r\nimport { apikey } from \"../index.js\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nexport const SearchBar = () => {\r\n  const [searchResult, setsearchResult] = useState([]);\r\n  const [query, setQuery] = useState(\"\");\r\n  const debouncedSearchTerm = useDebounce(query, 800);\r\n  \r\n  const onInputChange = (input) => {\r\n    setQuery(input);\r\n  };\r\n\r\n  \r\n\r\n  useEffect(\r\n    () => {\r\n      if (debouncedSearchTerm.length) {\r\n        axios\r\n          .get(\r\n            `https://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=${apikey}&q=${debouncedSearchTerm}`\r\n          )\r\n          .then((response) => {\r\n            setsearchResult(response.data);\r\n          });\r\n      } else {\r\n        setsearchResult([]);\r\n      }\r\n    },\r\n    [debouncedSearchTerm]\r\n  );\r\n\r\n  let city = localStorage.getItem(\"city\");\r\n  let name = localStorage.getItem(\"name\");\r\n  let country = localStorage.getItem(\"country\");\r\n\r\n  return (\r\n    <div>\r\n      <form>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search for a City\"\r\n          onChange={(e) => onInputChange(e.target.value)}\r\n        />{\" \"}\r\n      </form>\r\n      <br></br>\r\n      {(city === null) ? \"\": (<Link className=\"last-searched\" to={`/city/${city}/${name}/${country}`}>Last searched city: {name}, {country}</Link>)}\r\n      <br></br>\r\n      <br></br>\r\n      <SearchSuggestions\r\n        suggestions={searchResult}\r\n        search_item={query}\r\n      ></SearchSuggestions>\r\n    </div>\r\n  );\r\n};\r\n","import { useState, useEffect } from \"react\";\r\n\r\n// Our hook\r\nexport const useDebounce = (value, delay) => {\r\n  // State and setters for debounced value\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n  useEffect(\r\n    () => {\r\n      // Set debouncedValue to value (passed in) after the specified delay\r\n      const handler = setTimeout(() => {\r\n        setDebouncedValue(value);\r\n      }, delay);\r\n\r\n      // Return a cleanup function that will be called every time ...\r\n      // ... useEffect is re-called. useEffect will only be re-called ...\r\n      // ... if value changes (see the inputs array below).\r\n      // This is how we prevent debouncedValue from changing if value is ...\r\n      // ... changed within the delay period. Timeout gets cleared and restarted.\r\n      // To put it in context, if the user is typing within our app's ...\r\n      // ... search box, we don't want the debouncedValue to update until ...\r\n      // ... they've stopped typing for more than 500ms.\r\n      return () => {\r\n        clearTimeout(handler);\r\n      };\r\n    },\r\n    // Only re-call effect if value changes\r\n    // You could also add the \"delay\" var to inputs array if you ...\r\n    // ... need to be able to change that dynamically.\r\n    [value, delay]\r\n  );\r\n\r\n  return debouncedValue;\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { apikey } from \"../index.js\";\r\n\r\nexport const City = ({ match }) => {\r\n  const { city, Name, Country } = match.params;\r\n  const [cityDetails, setcityDetails] = useState([\r\n    {\r\n      Temperature: { Metric: { Value: \"\" } },\r\n      RealFeelTemperature: { Metric: { Value: \"\" } },\r\n      Visibility: { Metric: { Value: \"\" } },\r\n      Pressure: { Metric: { Value: \"\" } },\r\n      Wind: { Speed: { Metric: { Value: \"\" } } },\r\n      RelativeHumidity: \"\",\r\n      IndoorRelativeHumidity: \"\",\r\n      WeatherText: \"\",\r\n      WeatherIcon: \"1\",\r\n    },\r\n  ]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isError, setIsError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"city\", city);\r\n    localStorage.setItem(\"name\", Name);\r\n    localStorage.setItem(\"country\", Country);\r\n    setIsLoading(true);\r\n    axios\r\n      .get(\r\n        `https://dataservice.accuweather.com/currentconditions/v1/${city}?apikey=${apikey}&details=true`\r\n      )\r\n      .then((response) => {\r\n        setcityDetails(response.data);\r\n        setIsLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        setIsError(true);\r\n      });\r\n  }, [city, Name, Country]);\r\n\r\n  return (\r\n    <section className=\"ajax-section\">\r\n      <div className=\"container\">\r\n        {isError ? (\r\n          <div>Something went wrong ...</div>\r\n        ) : (\r\n          <ul className=\"cities\">\r\n            <li className=\"city\">\r\n              <h2 className=\"city-name\">\r\n                <span>{Name}</span>\r\n                <sup>{Country}</sup>\r\n              </h2>\r\n              <div className=\"city-temp\">\r\n                {isLoading ? (\r\n                  <div>Loading ...</div>\r\n                ) : (\r\n                  <div>\r\n                    {cityDetails[0].Temperature.Metric.Value}\r\n                    <sup>°C</sup>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              {isLoading ? (\r\n                <div></div>\r\n              ) : (\r\n                <figure>\r\n                  <img\r\n                    className=\"city-icon\"\r\n                    src={\r\n                      \"https://developer.accuweather.com/sites/default/files/\" +\r\n                      (cityDetails[0].WeatherIcon.toString().length === 1\r\n                        ? \"0\" + cityDetails[0].WeatherIcon\r\n                        : cityDetails[0].WeatherIcon) +\r\n                      \"-s.png\"\r\n                    }\r\n                    alt={cityDetails[0].WeatherText}\r\n                  ></img>\r\n                  <figcaption>{cityDetails[0].WeatherText}</figcaption>\r\n                </figure>\r\n              )}\r\n              <div className=\"details\">\r\n                <div>\r\n                  {isLoading ? (\r\n                    <div></div>\r\n                  ) : (\r\n                    <div className=\"city-detail\">\r\n                      RealFeel®{\" \"}\r\n                      <span>\r\n                        {cityDetails[0].RealFeelTemperature.Metric.Value}\r\n                      </span>{\" \"}\r\n                      °C\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div>\r\n                  {isLoading ? (\r\n                    <div></div>\r\n                  ) : (\r\n                    <div className=\"city-detail\">\r\n                      Wind NNE{\" \"}\r\n                      <span>{cityDetails[0].Wind.Speed.Metric.Value}</span> km/h\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div>\r\n                  {isLoading ? (\r\n                    <div></div>\r\n                  ) : (\r\n                    <div className=\"city-detail\">\r\n                      Pressure{\" \"}\r\n                      <span>{cityDetails[0].Pressure.Metric.Value}</span> mb\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div>\r\n                  {isLoading ? (\r\n                    <div></div>\r\n                  ) : (\r\n                    <div className=\"city-detail\">\r\n                      Visibility{\" \"}\r\n                      <span>{cityDetails[0].Visibility.Metric.Value}</span> km\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div>\r\n                  {isLoading ? (\r\n                    <div></div>\r\n                  ) : (\r\n                    <div className=\"city-detail\">\r\n                      Humidity <span>{cityDetails[0].RelativeHumidity}</span>%\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div>\r\n                  {isLoading ? (\r\n                    <div></div>\r\n                  ) : (\r\n                    <div className=\"city-detail\">\r\n                      Indoor Humidity{\" \"}\r\n                      <span>{cityDetails[0].IndoorRelativeHumidity}</span>%\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </li>\r\n          </ul>\r\n        )}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\n","import React from \"react\";\r\n\r\n\r\nexport const Footer = () => {\r\n  \r\n\r\n  return (\r\n    <footer className=\"page-footer\">\r\n      <div className=\"container\">\r\n        <small>\r\n          Made with <span>❤</span> by{\" \"}\r\n          <a\r\n            href=\"https://www.linkedin.com/in/atefjr/\"\r\n            rel=\"noreferrer\"\r\n            target=\"_blank\"\r\n          >\r\n            Mohamed Khalaf\r\n          </a>\r\n          <br></br>\r\n          <div>\r\n            Using\r\n            <a\r\n              href=\"https://developer.accuweather.com/apis\"\r\n              rel=\"noreferrer\"\r\n              target=\"_blank\"\r\n            >\r\n              <div className=\"accu-link\">AccuWeather API</div>\r\n            </a>\r\n          </div>\r\n        </small>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n","import \"./App.css\";\nimport { SearchBar } from \"./components/SearchBar.js\";\nimport { City } from \"./components/City.js\";\nimport { Footer } from \"./components/Footer.js\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <div>\n        <header className=\"top-banner\">\n          <div className=\"container\">\n            <h1 className=\"heading\"> Simple Weather App </h1>\n            <Switch>\n              <Route exact path=\"/\" render={() => <SearchBar> </SearchBar>} />\n              <Route exact path=\"/city/:city/:Name/:Country\" component={City} />\n            </Switch>\n          </div>\n        </header>{\" \"}\n        <Footer></Footer>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nexport const apikey = \"RmQvUIQcXAfsIinKqn0yfXlB8YYuFI71\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}